// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.1 (swiftlang-5.7.1.134.4 clang-1400.0.29.51)
// swift-module-flags: -target x86_64-apple-macos13.1 -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftVirtualization -swift-version 5 -enforce-exclusivity=checked -O -library-level api -module-name Virtualization
// swift-module-flags-ignorable: -enable-bare-slash-regex -user-module-version 104.7.1
import Swift
@_exported import Virtualization
import _Concurrency
import _StringProcessing
extension Virtualization.VZVirtualMachine {
  public func start(completionHandler: @escaping (Swift.Result<Swift.Void, Swift.Error>) -> Swift.Void)
  public func pause(completionHandler: @escaping (Swift.Result<Swift.Void, Swift.Error>) -> Swift.Void)
  public func resume(completionHandler: @escaping (Swift.Result<Swift.Void, Swift.Error>) -> Swift.Void)
}
extension Virtualization.VZVirtioSocketDevice {
  public func connect(toPort port: Swift.UInt32, completionHandler: @escaping (Swift.Result<Virtualization.VZVirtioSocketConnection, Swift.Error>) -> Swift.Void)
}
